levels = c('Hispanic', 'Non-Hispanic')))
arrests_bds.clean <- arrests_bds.clean %>%
mutate(hispanic = recode(ethnicity,
'0' = 'NA',
'Other' = 'Non-Hispanic')) %>%
mutate(hispanic = factor(hispanic,
levels = c('Hispanic', 'Non-Hispanic')))
table(arrests_bds.clean$hispanic, arrests_bds.clean$ethnicity, useNA = "always")
table(arrests_bds.clean$race_clean, arrests_bds.clean$hispanic, useNA = "always")
prop.table(table(arrests_bds.clean$race_clean, arrests_bds.clean$hispanic),
margin = 2) %>%
round(2)
arrests_bds.clean <- arrests_bds.clean %>%
mutate(race_clean_char = as.character(race_clean),
hispanic_char   = as.character(hispanic)) %>% #work with characters
mutate(race_eth = ifelse(hispanic_char %in% "Hispanic", #use %in% so that NAs are evaluated
hispanic_char,
race_clean_char) ) %>%
mutate(race_eth = as.factor(recode(race_eth, "White" = "Non-Hispanic White"))) %>%
select(-race_clean_char, -hispanic_char)
table(arrests_bds.clean$race_eth, arrests_bds.clean$hispanic, useNA = "always")
arrests_bds.clean %>% count(race_eth, sort = TRUE)
? %>%
?%>%
arrests_bds.clean <- arrests_bds.clean %>% mutate(pd = "bds")
arrests.clean <- bind_rows(arrests_bds.clean, arrests_bds.clean) %>%
mutate(pd = as.factor(pd),
st_id = as.factor(st_id), #station/location info is not continuous
loc2 = as.factor(loc2)) %>%
select(pd, race_eth, age, male, st_id, loc2, dismissal) #need to add dismissal column from the LAS data
arrests.clean <- bind_rows(arrests_bds.clean, arrests_bds.clean) %>%
mutate(pd = as.factor(pd),
st_id = as.factor(st_id), #station/location info is not continuous
loc2 = as.factor(loc2)) %>%
select(pd, race_eth, age, male, st_id, loc2) #need to add dismissal column from the LAS data
summary(arrests.clean)
arrests_bds.clean <- arrests_bds.clean %>%
mutate(race_clean_char = as.character(race_clean),
hispanic_char   = as.character(hispanic)) %>% #work with characters
mutate(race_eth = ifelse(hispanic_char %in% "Hispanic", #use %in% so that NAs are evaluated
hispanic_char,
race_clean_char) ) %>%
mutate(race_eth = as.factor(recode(race_eth,
"White" = "Non-Hispanic White",
"Black" = "Non-Hispanic Black"))) %>%
select(-race_clean_char, -hispanic_char)
library(tidyverse)
library(fastDummies)
#library(ggplot2) #included with Tidyverse
#library(forcats) #included with Tidyverse
#confirm correct working directory
getwd()
## -----------------------------------------------------------------------------
## 2. load datasets using read_csv() and inspect
##
##    two datasets of administrative records from public defenders in Brooklyn
##      1. microdata_BDS_inclass.csv: Brooklyn Defender Services
##      2. microdata_LAS_inclass.csv: Legal Aid Society
##
##    each row contains client data for an individual arrested for subway fare evasion
##
##    note these files were provided by the respective orgs with no documentation
##
##  a. give a brief overview of the data
##     (start to think about this now, but revisit after you know what
##      information proved most relevant for your analysis)
##
##  b. what is the unit of observation and population represented by this "sample"?
##     do you think this sample does a good job representing the population of interest?
##
##  c. inspect and describe the coding of race/ethnicity information in each dataset
##
##  d. are there any data limitations you think are important to note from the outset?
## -----------------------------------------------------------------------------
#reading in blanks as NA
arrests_bds <- read_csv("microdata_BDS_inclass.csv", na = "")
arrests_las <- read_csv("microdata_LAS_inclass.csv", na = "")
str(arrests_bds, give.attr = FALSE)
str(arrests_las, give.attr = FALSE)
#note the give.attr argument - use to make long str() output more readable
#note that string variables are imported as characters by default (not factors)
#let's convert race and ethnicity to factors to inspect before cleaning
arrests_bds <- arrests_bds %>%
mutate(race = as.factor(race),
ethnicity = as.factor(ethnicity) )
arrests_las <- arrests_las %>%
mutate(race = as.factor(las_race_key),
ethnicity = as.factor(hispanic_flag) )
#2a.
#2b.
#2c.
#compare race coding
summary(arrests_bds$race)
summary(arrests_las$race)
#compare Hispanic/ethnicity coding
summary(arrests_bds$ethnicity)
summary(arrests_las$ethnicity)
#2d.
## -----------------------------------------------------------------------------
## 3. clean BDS race and ethnicity data:
##
##  recode race and ethnicity vars and assign to new df called arrests_bds.clean
##  generate 3 new columns for cleaned data:
##    a. race_clean
##    b. ethnicity_clean
##    c. create a single factor variable w/mutually exclusive groups (race_eth)
##       - Black, Non-Hispanic White, Hispanic, Asian/Pacific Islander, Other, NA
##
##  before we do this...
##
##  in-class discussion questions:
##  - what cat do you want to use for Black Hispanic identity?
##  - what is missing by using mutually exclusive, single identity categories?
## -----------------------------------------------------------------------------
#3a. BDS race
#inspect
#NOTE: don't show all of this in your R Markdown submission, only what is needed
levels(arrests_bds$race)
typeof(arrests_bds$race) #remember factors are stored as integers corresponding to levels
summary(arrests_bds$race)
arrests_bds %>% count(race, sort = TRUE)
arrests_bds %>% count(race, ethnicity, sort = FALSE)
#a quick and easy way to show crosstabs using base R (just show this!)
table(arrests_bds$race, arrests_bds$ethnicity, useNA = "always")
#NOTE: why set useNA = "always" here?
#ok now let's recode in an internally consistent manner
#recode 0 and Unknown into NA
#recode Am Indian as Other because only 1 observation
#assign to race_clean as a factor w/correct race groups
arrests_bds.clean <- arrests_bds %>%
mutate(race_clean = recode(race, "0" = "NA",
"Unknown" = "NA",
"Am Indian" = "Other" ) )%>%
mutate(race_clean = factor(race_clean,
levels = c("Black", "White", "Asian/Pacific Islander", "Other")))
#note: the character string "NA" is not the same as a system NA
#      by explicitly setting factor levels,
#       the omitted category ("NA") is forced into system NA values
#validation: confirm the recode worked as intended
arrests_bds.clean %>% count(race_clean, sort = TRUE)
table(arrests_bds.clean$race_clean, arrests_bds.clean$race, useNA = "always")
#NOTE: recode doesn't always work well with pipes like other dplyr functions,
#      instead we use the function as a part of the argument to mutate()
#3b. BDS ethnicity
#inspect
levels(arrests_bds.clean$ethnicity)
table(arrests_bds.clean$race_clean, arrests_bds.clean$ethnicity, useNA = "always")
#now let's recode by creating a hispanic column where:
#1. hispanic takes the values Hispanic, Non-Hispanic, or NA
#2. then use factor() to set levels based on the above values
arrests_bds.clean <- arrests_bds.clean %>%
mutate(hispanic = recode(ethnicity,
'0' = 'NA',
'Other' = 'Non-Hispanic')) %>%
mutate(hispanic = factor(hispanic,
levels = c('Hispanic', 'Non-Hispanic')))
#validation: confirm the recode worked as intended
table(arrests_bds.clean$hispanic, arrests_bds.clean$ethnicity, useNA = "always")
summary(arrests_bds.clean$hispanic) #less useful for validation!
#NOTE: we used separate pipes to clean ethnicity & race, could do in a single pipe
#3c. race_eth
#let's investigate a bit
table(arrests_bds.clean$race_clean, arrests_bds.clean$hispanic, useNA = "always")
prop.table(table(arrests_bds.clean$race_clean, arrests_bds.clean$hispanic),
margin = 2) %>%
round(2)
#recoding with different data types and/or NA values can be tricky
#let's start by converting factors to characters using the as.character()
arrests_bds.clean <- arrests_bds.clean %>%
mutate(race_clean_char = as.character(race_clean),
hispanic_char   = as.character(hispanic)) %>% #work with characters
mutate(race_eth = ifelse(hispanic_char %in% "Hispanic", #use %in% so that NAs are evaluated
hispanic_char,
race_clean_char) ) %>%
mutate(race_eth = as.factor(recode(race_eth,
"White" = "Non-Hispanic White",
"Black" = "Non-Hispanic Black"))) %>%
select(-race_clean_char, -hispanic_char)
table(arrests_bds.clean$race_eth, arrests_bds.clean$hispanic, useNA = "always")
arrests_bds.clean %>% count(race_eth, sort = TRUE)
table(arrests_las$race, arrests_las$ethnicity, useNA = 'always')
table(arrests_las$race, arrests_las$hispanic_flag, useNA = 'always')
arrest_las.clean <- arrests_las %>%
mutate(race_clean = recode(las_race_key,
"Asian or Pacific Islander" = "Asian/Pacific Islander",
"Unknown" = "NA",
"Latino" = "Hispanic",
"White" = "Non-Hispanic White",
"Black" = "Non-Hispanic Black")) %>%
mutate(race_eth = ifelse(hispanic_flag %in% "Y", "Hispanic", race_clean)) %>%
mutate(race_eth = factor(race_eth, levels = c("Non-Hispanic Black",
"Hispanic",
"Non-Hispanic White",
"Asian/Pacific Islander",
"Other")))
arrests_las.clean <- arrests_las %>%
mutate(race_clean = recode(las_race_key,
"Asian or Pacific Islander" = "Asian/Pacific Islander",
"Unknown" = "NA",
"Latino" = "Hispanic",
"White" = "Non-Hispanic White",
"Black" = "Non-Hispanic Black")) %>%
mutate(race_eth = ifelse(hispanic_flag %in% "Y", "Hispanic", race_clean)) %>%
mutate(race_eth = factor(race_eth, levels = c("Non-Hispanic Black",
"Hispanic",
"Non-Hispanic White",
"Asian/Pacific Islander",
"Other")))
table(arrests_las.clean$race_eth, arrests_las.clean$hispanic_flag, useNA = "always")
View(arrest_las.clean)
View(arrest_las.clean)
rm(arrest_las.clean)
arrests_las.clean %>% count(race_eth, sort = TRUE)
arrests_bds.clean <- arrests_bds.clean %>% mutate(pd = "bds")
arrests_las.clean <- arrests_las.clean %>% mutate(pd = "las")
arrests.clean <- bind_rows(arrests_las.clean, arrests_bds.clean) %>%
mutate(pd = as.factor(pd),
st_id = as.factor(st_id), #station/location info is not continuous
loc2 = as.factor(loc2)) %>%
select(pd, race_eth, age, male, st_id, loc2) #need to add dismissal column from the LAS data
summary(arrests.clean)
arrests.clean <- bind_rows(arrests_bds.clean, arrests_las.clean) %>%
mutate(pd = as.factor(pd),
st_id = as.factor(st_id), #station/location info is not continuous
loc2 = as.factor(loc2)) %>%
select(pd, race_eth, age, male, st_id, loc2) #need to add dismissal column from the LAS data
summary(arrests.clean)
View(arrests.clean)
nrow(arrests.clean)
save(list="arrests.clean",
file = "arrests.clean.RData")
arrests.clean %>%
group_by(race_eth) %>%
summarise(n =n()) %>%
arrange(desc(n))
arrests.clean %>% count(race_eth, sort = TRUE)
table(arrests.clean$race_eth, useNA = "always")
arrests.clean %>%
filter(!is.na(race_eth)) %>%
count(race_eth, sort = TRUE)
prop.table(table(arrests.clean$race_eth)) %>% round(2)
prop.table(table(arrests.clean$race_eth, useNA = "always")) %>% round(2)
prop.table(table(arrests.clean$race_eth, useNA = "always")) %>%
round(2) %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename(race_eth = Var1)
prop.table(table(arrests.clean$race_eth)) %>%
round(2) %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename(race_eth = Var1)
race_eth_stats <- arrests.clean %>%
group_by(race_eth) %>%
summarise(mean_avg = mean(age, na.rm = TRUE))
arrests.clean <- dummy_cols(arrests.clean, select_columns = "race_eth")
str(arrests.clean)
summary(arrests.clean[,7:12])
arrests.clean <- dummy_cols(arrests.clean, select_columns = "race_eth")
str(arrests.clean)
summary(arrests.clean[,8:13])
arrests.clean <- dummy_cols(arrests.clean, select_columns = "race_eth")
str(arrests.clean)
summary(arrests.clean[,8:13])
arrests.clean <- dummy_cols(arrests.clean, select_columns = "race_eth")
str(arrests.clean)
summary(arrests.clean[,7:12])
race_eth_stats <- arrests.clean %>%
group_by(race_eth) %>%
summarise(mean_avg = mean(age, na.rm = TRUE),
share_male = mean(male, na.rm = TRUE),
arrests.clean %>%
summarise(mean_black = mean(`race_eth_Non-Hispanic Black`, na.rm = TRUE))
arrests.clean <- bind_rows(arrests_bds.clean, arrests_las.clean) %>%
arrests.clean <- bind_rows(arrests_bds.clean, arrests_las.clean) %>%
mutate(pd = as.factor(pd),
st_id = as.factor(st_id), #station/location info is not continuous
loc2 = as.factor(loc2)) %>%
select(pd, race_eth, age, male, st_id, loc2, dismissal) #need to add dismissal column from the LAS data
summary(arrests.clean)
save(list="arrests.clean",
file = "arrests.clean.RData")
arrests.clean %>%
group_by(race_eth) %>%
summarise(n =n()) %>%
arrange(desc(n))
arrests.clean %>% count(race_eth, sort = TRUE)
table(arrests.clean$race_eth, useNA = "always")
arrests.clean %>%
filter(!is.na(race_eth)) %>%
count(race_eth, sort = TRUE)
prop.table(table(arrests.clean$race_eth)) %>% round(2)
prop.table(table(arrests.clean$race_eth, useNA = "always")) %>% round(2)
prop.table(table(arrests.clean$race_eth, useNA = "always")) %>%
round(2) %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename(race_eth = Var1)
prop.table(table(arrests.clean$race_eth)) %>%
round(2) %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
rename(race_eth = Var1)
race_eth_stats <- arrests.clean %>%
group_by(race_eth) %>%
summarise(mean_avg = mean(age, na.rm = TRUE),
share_male = mean(male, na.rm = TRUE)
arrests.clean <- dummy_cols(arrests.clean, select_columns = "race_eth")
arrests.clean <- dummy_cols(arrests.clean, select_columns = "race_eth")
str(arrests.clean)
summary(arrests.clean[,8:13])
arrests.clean %>%
summarise(mean_black = mean(`race_eth_Non-Hispanic Black`, na.rm = TRUE))
arrests.clean %>%
group_by(loc2)  %>%
summarise(st_id = first(st_id), n = n())  %>%
arrange(desc(n))
arrests_stations <- arrests.clean %>%
group_by(loc2) %>%
summarise(st_id = first(st_id),
n = n(),
n_black = sum(race_eth_Black, na.rm = TRUE),
n_hisp  = sum(race_eth_Hispanic, na.rm = TRUE),
n_api   = sum(`race_eth_Asian/Pacific Islander`, na.rm = TRUE),
n_nhw   = sum(`race_eth_Non-Hispanic White`, na.rm = TRUE),
n_oth   = sum(race_eth_Other, na.rm = TRUE) )   %>%
arrange(desc(n))
arrests_stations <- arrests.clean %>%
group_by(loc2) %>%
summarise(st_id = first(st_id),
n = n(),
n_black = sum(race_eth_Non_Hispanic_Black, na.rm = TRUE),
n_hisp  = sum(race_eth_Hispanic, na.rm = TRUE),
n_api   = sum(`race_eth_Asian/Pacific Islander`, na.rm = TRUE),
n_nhw   = sum(`race_eth_Non-Hispanic White`, na.rm = TRUE),
n_oth   = sum(race_eth_Other, na.rm = TRUE) )   %>%
arrange(desc(n))
arrests_stations <- arrests.clean %>%
group_by(loc2) %>%
summarise(st_id = first(st_id),
n = n(),
n_black = sum(race_eth_Non-Hispanic Black, na.rm = TRUE),
arrests_stations <- arrests.clean %>%
group_by(loc2) %>%
summarise(st_id = first(st_id),
n = n(),
n_black = sum(`race_eth_Non-Hispanic Black`, na.rm = TRUE),
n_hisp  = sum(race_eth_Hispanic, na.rm = TRUE),
n_api   = sum(`race_eth_Asian/Pacific Islander`, na.rm = TRUE),
n_nhw   = sum(`race_eth_Non-Hispanic White`, na.rm = TRUE),
n_oth   = sum(race_eth_Other, na.rm = TRUE) )   %>%
arrange(desc(n))
knitr::kable(head(arrests_stations, n = 10)) #use kable for formatted tables
arrests_stations_top <- arrests.clean %>%
group_by(loc2) %>%
summarise(st_id = first(st_id),
n = n(),
n_black = sum(`race_eth_Non-Hispanic Black`, na.rm = TRUE),
n_hisp  = sum(race_eth_Hispanic, na.rm = TRUE),
n_api   = sum(`race_eth_Asian/Pacific Islander`, na.rm = TRUE),
n_nhw   = sum(`race_eth_Non-Hispanic White`, na.rm = TRUE),
n_oth   = sum(race_eth_Other, na.rm = TRUE) )   %>%
mutate(n_bh = n_black + n_hisp)
arrests_stations_top <- arrests.clean %>%
group_by(loc2) %>%
summarise(st_id = first(st_id),
n = n(),
n_black = sum(`race_eth_Non-Hispanic Black`, na.rm = TRUE),
n_hisp  = sum(race_eth_Hispanic, na.rm = TRUE),
n_api   = sum(`race_eth_Asian/Pacific Islander`, na.rm = TRUE),
n_nhw   = sum(`race_eth_Non-Hispanic White`, na.rm = TRUE),
n_oth   = sum(race_eth_Other, na.rm = TRUE) )   %>%
mutate(n_bh = n_black + n_hisp,
new = 1-n_bh)
View(arrests_stations_top)
View(arrests_las)
View(arrests_bds)
View(arrests_bds.clean)
library(tidyverse)
library(fastDummies)
#library(ggplot2) #included with Tidyverse
#library(forcats) #included with Tidyverse
#confirm correct working directory
getwd()
## -----------------------------------------------------------------------------
## 2. load datasets using read_csv() and inspect
##
##    two datasets of administrative records from public defenders in Brooklyn
##      1. microdata_BDS_inclass.csv: Brooklyn Defender Services
##      2. microdata_LAS_inclass.csv: Legal Aid Society
##
##    each row contains client data for an individual arrested for subway fare evasion
##
##    note these files were provided by the respective orgs with no documentation
##
##  a. give a brief overview of the data
##     (start to think about this now, but revisit after you know what
##      information proved most relevant for your analysis)
##
##  b. what is the unit of observation and population represented by this "sample"?
##     do you think this sample does a good job representing the population of interest?
##
##  c. inspect and describe the coding of race/ethnicity information in each dataset
##
##  d. are there any data limitations you think are important to note from the outset?
## -----------------------------------------------------------------------------
#reading in blanks as NA
arrests_bds <- read_csv("microdata_BDS_inclass.csv", na = "")
arrests_las <- read_csv("microdata_LAS_inclass.csv", na = "")
str(arrests_bds, give.attr = FALSE)
str(arrests_las, give.attr = FALSE)
#note the give.attr argument - use to make long str() output more readable
#note that string variables are imported as characters by default (not factors)
#let's convert race and ethnicity to factors to inspect before cleaning
arrests_bds <- arrests_bds %>%
mutate(race = as.factor(race),
ethnicity = as.factor(ethnicity) )
arrests_las <- arrests_las %>%
mutate(race = as.factor(las_race_key),
ethnicity = as.factor(hispanic_flag) )
#2a.
#2b.
#2c.
#compare race coding
summary(arrests_bds$race)
summary(arrests_las$race)
#compare Hispanic/ethnicity coding
summary(arrests_bds$ethnicity)
summary(arrests_las$ethnicity)
#2d.
## -----------------------------------------------------------------------------
## 3. clean BDS race and ethnicity data:
##
##  recode race and ethnicity vars and assign to new df called arrests_bds.clean
##  generate 3 new columns for cleaned data:
##    a. race_clean
##    b. ethnicity_clean
##    c. create a single factor variable w/mutually exclusive groups (race_eth)
##       - Black, Non-Hispanic White, Hispanic, Asian/Pacific Islander, Other, NA
##
##  before we do this...
##
##  in-class discussion questions:
##  - what cat do you want to use for Black Hispanic identity?
##  - what is missing by using mutually exclusive, single identity categories?
## -----------------------------------------------------------------------------
#3a. BDS race
#inspect
#NOTE: don't show all of this in your R Markdown submission, only what is needed
levels(arrests_bds$race)
typeof(arrests_bds$race) #remember factors are stored as integers corresponding to levels
summary(arrests_bds$race)
arrests_bds %>% count(race, sort = TRUE)
arrests_bds %>% count(race, ethnicity, sort = FALSE)
#a quick and easy way to show crosstabs using base R (just show this!)
table(arrests_bds$race, arrests_bds$ethnicity, useNA = "always")
#NOTE: why set useNA = "always" here?
#ok now let's recode in an internally consistent manner
#recode 0 and Unknown into NA
#recode Am Indian as Other because only 1 observation
#assign to race_clean as a factor w/correct race groups
arrests_bds.clean <- arrests_bds %>%
mutate(race_clean = recode(race, "0" = "NA",
"Unknown" = "NA",
"Am Indian" = "Other" ) )%>%
mutate(race_clean = factor(race_clean,
levels = c("Black", "White", "Asian/Pacific Islander", "Other")))
#note: the character string "NA" is not the same as a system NA
#      by explicitly setting factor levels,
#       the omitted category ("NA") is forced into system NA values
#validation: confirm the recode worked as intended
arrests_bds.clean %>% count(race_clean, sort = TRUE)
table(arrests_bds.clean$race_clean, arrests_bds.clean$race, useNA = "always")
#NOTE: recode doesn't always work well with pipes like other dplyr functions,
#      instead we use the function as a part of the argument to mutate()
#3b. BDS ethnicity
#inspect
levels(arrests_bds.clean$ethnicity)
table(arrests_bds.clean$race_clean, arrests_bds.clean$ethnicity, useNA = "always")
#now let's recode by creating a hispanic column where:
#1. hispanic takes the values Hispanic, Non-Hispanic, or NA
#2. then use factor() to set levels based on the above values
arrests_bds.clean <- arrests_bds.clean %>%
mutate(hispanic = recode(ethnicity,
'0' = 'NA',
'Other' = 'Non-Hispanic')) %>%
mutate(hispanic = factor(hispanic,
levels = c('Hispanic', 'Non-Hispanic')))
#validation: confirm the recode worked as intended
table(arrests_bds.clean$hispanic, arrests_bds.clean$ethnicity, useNA = "always")
summary(arrests_bds.clean$hispanic) #less useful for validation!
#NOTE: we used separate pipes to clean ethnicity & race, could do in a single pipe
#3c. race_eth
#let's investigate a bit
table(arrests_bds.clean$race_clean, arrests_bds.clean$hispanic, useNA = "always")
prop.table(table(arrests_bds.clean$race_clean, arrests_bds.clean$hispanic),
margin = 2) %>%
round(2)
#recoding with different data types and/or NA values can be tricky
#let's start by converting factors to characters using the as.character()
arrests_bds.clean <- arrests_bds.clean %>%
mutate(race_clean_char = as.character(race_clean),
hispanic_char   = as.character(hispanic)) %>% #work with characters
mutate(race_eth = ifelse(hispanic_char %in% "Hispanic", #use %in% so that NAs are evaluated
hispanic_char,
race_clean_char) ) %>%
mutate(race_eth = as.factor(recode(race_eth,
"White" = "Non-Hispanic White",
"Black" = "Non-Hispanic Black"))) %>%
select(-race_clean_char, -hispanic_char)
View(arrests.clean)
View(arrests_las)
