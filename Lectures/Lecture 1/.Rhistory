getwd
getwd()
getwd()
getwd()
install.packages("gapminder")
#load this package
library(gapminder)
#let's assign the gapminder data frame to a new data frame called gap
gap <- gapminder
View(gap)
#access built in help function for str()
str(gap)
#access built in help function for str()
?str
#the function class() tells us what class(es) an object is assigned to
class(gap)
#some other functions
head(gap)
head(gap, n = 10)
view(gap)
View(gap)
dim(gap)
ncol(gap)
nrow(gap)
names(gap)
str(names(gap))
num_of_vars <- ncol(gap)
num_of_vars
#get summary statistics
summary(gap)
#let's plot the relationship of year (x) vs lifeExp (y) using base R
plot(lifeExp ~ year, gap)
#let's plot the relationship of year (x) vs lifeExp (y) using base R
plot (lifeExp ~ year, gap)
#let's plot the relationship of year (x) vs lifeExp (y) using base R
plot(lifeExp ~ year, gap, ylab = 'life expectancy')
plot((y = lifeExp) ~ (x = year), data = gap))
plot((y = lifeExp) ~ (x = year)), data = gap)
plot((y = lifeExp) ~ (x = year), data = gap)
plot(gap$year, gap$lifeExp)
#what is a factor? let's look at some base R functions to figure it out
summary(gap$continent)
table(gap$year)
nlevels(gap$continent)
table(gap$year)
freq_byyear <- table(gap$year)
barplot(freq_byyear)
getwd()
getwd()
str(gap)
View(gap)
class(gap)
head(gap)
?head
head(gap, n = 10)
names(gap) #get the column names
names(gap) #get the column names
names(gap) #get the column names
names(gap)[3] #get the name of the third column
#we can assign the result of a function if we want to refer back to it:
num_of_vars <- ncol(gap) #assign the results of nrow to new object num_of_vars
num_of_vars #note that we need to type the object name again to view it
#get summary statistics for all variables
summary(gap)
#let's plot the relationship of year (x) vs lifeExp (y) using base R
plot(lifeExp ~ year, gap) #the tilde (~) operator sets up a "formula"
#let's plot the relationship of year (x) vs lifeExp (y) using base R
plot(lifeExp ~ year, gap) #the tilde (~) operator sets up a "formula"
plot(lifeExp ~ year, gap, xlab = "year", ylab = "life expectancy")
#get summary statistics for all variables
summary(gap)
#let's apply some functions to specific variables (i.e. columns of data)
#start with a continuous numeric variable (object type 'int')
#let's see how R uses $ to refer to a variable in a dataframe (subsetting)
head(gap$lifeExp)
summary(gap$lifeExp)
class(gap$continent)
?factor
#let's look at the documentation
?plot
#alternative 1
plot((y = lifeExp) ~ (x = year), data = gap)
#alternative 2
plot(gap$year, gap$lifeExp)
#let's apply some functions to specific variables (i.e. columns of data)
#start with a continuous numeric variable (object type 'int')
#let's see how R uses $ to refer to a variable in a dataframe (subsetting)
head(gap$lifeExp)
summary(gap$lifeExp)
hist(gap$lifeExp)
#here's one way to run a frequency table to check the number of obs per year
table(gap$year)
#let's assign this frequency table to a new object called freq_byyear
freq_byyear <- table(gap$year)
#then pass this object (a column of data!) as an argument to the barplot function
barplot(freq_byyear)
View(gap)
