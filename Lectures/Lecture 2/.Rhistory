library(readr)
cps_june_22_23 <- read_csv("cps_june_22-23.csv")
View(cps_june_22_23)
library(tidyverse)
getwd()
cps <- read.csv("cps_june_22-23.csv")
View(cps)
cps <- na.omit(cps)
# 1a.
str(cps)
#we can also inspect the data frame by double-clicking in the Environment tab
codebook(cps)
source("C:/Users/philc/OneDrive/Desktop/Spring 2024/R/Lectures/Lecture 2/Lecture2-startclass.R", echo=TRUE)
View(cps)
summary(cps$age)
summary(cps$race)
mutate(cps, sex.fac = as.factor(sex))
str(  mutate(cps, sex.fac = as.factor(sex)))
# 1c.
cps.temp1 <- cps %>%
mutate(sex.fact = as.factor(sex))
# 1c.
cps.temp1 <- cps %>%
mutate(sex.fact = as.factor(sex),
race.fac = as.factor(race),
college.fac = as.factor(college))
# 1c.
cps.temp1 <- cps %>%
mutate(sex.fact = as.factor(sex),
race.fac = as.factor(race),
college.fac = as.factor(college)) %>%
select(-serial, -ind)
View(cps.temp1)
head(cps.temp1, n = 5)
#some helpful syntax for later:
#subset the first row of cps.temp1
cps.temp1[1,]
#some helpful syntax for later:
#subset the first row of cps.temp1
cps.temp1[1]
# 1d.
levels(cps.temp1$sex.fac)
#some helpful syntax for later:
#subset the first row of cps.temp1
cps.temp1[1,]
#subset the cell in the first row, 4th column (i.e. first obs for age)
cps.temp1[1,4]
# 1d.
levels(cps.temp1$sex.fac)
# 1e.
cps_2022 <- cps.temp1 %>%
filter(year == 2022)
head(cps_2022)
# 1f.
rm(cps.temp1)
sumarise(cps_2022, n_distinct(personid))
summarise(cps_2022, n_distinct(personid))
summarise(cps_2022, n_distinct(hhid))
# 2b. HINT: we need to calculate a statistic for a given column of data
?summarise
################################################################################
##
## [ PROJ ] < Assessing gender wage gaps using the Current Population Survey >
## [ FILE ] < Lecture2-startclass.R >
## [ INIT ] < Jan 23, 2024 >
##
################################################################################
## ---------------------------
## libraries
## ---------------------------
library(tidyverse)
## ---------------------------
## directory paths
## ---------------------------
getwd()
## -----------------------------------------------------------------------------
## 1. load and inspect CPS data:
##
##    a. inspect the data frame and data types for each column
##          - make sure to inspect the age, sex, race, college columns
##
##    b. use the mutate function to create new column for sex:
##        sex.fac = as.factor(sex),
##        check if it worked by calling the str() function
##
##    c. include sex.fac in a new data frame called cps.temp1,
##       also create factors for race and college education,
##        use a pipe to exclude the columns for serial and ind
##        after creating cps.temp1, print the first 5 observations
##
##    d. inspect race.fac, sex.fac, and college.fac using the levels() function,
##        what package is the levels() function located in?
##
##    e. use filter() to only include rows only for June 2022,
##        store as a new object cps_2022,
##        print the first 5 observations,
##        confirm your data only includes observations for 2022
##
##    f. remove the cps.temp1 object from memory using the rm() function
## -----------------------------------------------------------------------------
# load the CPS data frame and store as an object 'cps'
cps <- read.csv("cps_june_22-23.csv")
# this time we will remove NA values from the outset in the interest of time
# general rule: need to understand why NA values arise before deciding what to do
cps <- na.omit(cps) #remove all observations with NA values
# 1a.
str(cps)
View(cps)
summary(cps$age)
summary(cps$race)
#we can also inspect the data frame by double-clicking in the Environment tab
# 1b.
mutate(cps, sex.fac = as.factor(sex))
str(mutate(cps, sex.fac = as.factor(sex)))
# 1c.
cps.temp1 <- cps %>%
mutate(sex.fact = as.factor(sex),
race.fac = as.factor(race),
college.fac = as.factor(college)) %>%
select(-serial, -ind)
head(cps.temp1, n = 5)
#some helpful syntax for later:
#subset the first row of cps.temp1
cps.temp1[1,]
#subset the cell in the first row, 4th column (i.e. first obs for age)
cps.temp1[1,4]
# 1d.
levels(cps.temp1$sex.fac)
# 1e.
cps_2022 <- cps.temp1 %>%
filter(year == 2022)
head(cps_2022)
# 1f.
rm(cps.temp1)
## -----------------------------------------------------------------------------
## 2. Describe the cps_2022 data frame
##
##    a. what is the unit of observation (or unit of analysis)?
##
##    b. how many individuals are observed? from how many households?
##
##    c. what is the average age of individuals in the sample? youngest and oldest person?
## -----------------------------------------------------------------------------
# 2a.
#NOTE: don't include all of your inspection commands in your R Markdown submission
#      I've included view() as a reminder, but it should never be in your submission
#      neither should clunky str() output, be selective about the output you show!
# 2b. HINT: we need to calculate a statistic for a given column of data
?summarise
summarise(cps_2022, n_distinct(personid))
summarise(cps_2022, n_distinct(hhid))
cps_2022 %>%
summarise(avg_age = mean(age),
min_age = min(age),
max_age = max(age))
# 3a.
cps_2022 %>% summarise(max_earning = max(earnweek))
max_earnings <- cps_2022 %>%
summarise(max_earning = max(earnweek))
View(max_earnings)
cps_2022 %>%
arrange(desc(earnweek)) %>%
select(earnweek) %>%
head(n=1)
?select
cps_max_earn <- cps_2022 %>%
filter(earnweek = max_earnings[1,])
cps_max_earn <- cps_2022 %>%
filter(earnweek == max_earnings[1,])
View(cps_max_earn)
summary(cps_max_earn$earnweek)
#obviously better to refer to column names when you know them as we do here
#alternatively, you could refer to the elements you want within the cps_max_earn object
#by calling the 4th, 5th, and 6th columns from the first row
cps_max_earn[1,4:6]
cps_2022 %>%
arrange(desc(earnweek)) %>%
select(age, sex, race) %>%
head(n=10)
cps_2022 %>%
filter(earnweek <= 2000) %>%
nrow()
cps_2022 %>%
filter(earnweek <- 2000) %>%
nrow()
cps_2022 %>%
filter(earnweek <= 2000) %>%
nrow()
cps_2022 %>%
filter(earnweek >= 2000) %>%
nrow()
cps_2022 %>%
filter(earnweek > 2000) %>%
nrow()
View(cps_2022)
View(cps)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
`install.packages("tinytex")`
*Before knitting your rmd file as a pdf, you will need to install TinyTex for Latex distribution by running the following code:*
*Before knitting your rmd file as a pdf, you will need to install TinyTex for Latex distribution by running the following code:*
*Before knitting your rmd file as a pdf, you will need to install TinyTex for Latex distribution by running the following code:*
`install.packages("tinytex")`
`tinytex::install_tinytex()`
install.packages("tinytex")
tinytex::install_tinytex()
cps <- read.csv("cps_june_2022.csv")
mutate(cps, sex.fac = as.factor(sex))
mutate(cps, sex.fac = as.factor(sex))
str(mutate(cps, sex.fac = as.factor(sex)))
mutate(cps, sex.fac = as.factor(sex))
str(mutate(cps, sex.fac = as.factor(sex)))
