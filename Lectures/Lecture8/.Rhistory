install.packages("fixest")
install.packages("multiwayvcov")
install.packages("estimatr")
install.packages("modelsummary")
library(readstata13)  #imports .dta files from Stata 13 and up
library(tidyverse)
library(lubridate)
library(fastDummies)
library(weights)
library(lmtest)
library(sandwich)
library(multiwayvcov)
library(fixest)
library(estimatr)
library(modelsummary)
library(tidycensus)
install.packages("tidycensus")
library(readstata13)  #imports .dta files from Stata 13 and up
library(tidyverse)
library(lubridate)
library(fastDummies)
library(weights)
library(lmtest)
library(sandwich)
library(multiwayvcov)
library(fixest)
library(estimatr)
library(modelsummary)
library(tidycensus)
library(ggrepel)
library(ggpmisc)
library(readstata13)  #imports .dta files from Stata 13 and up
library(tidyverse)
library(lubridate)
library(fastDummies)
library(weights)
library(lmtest)
library(sandwich)
library(multiwayvcov)
library(fixest)
library(estimatr)
library(modelsummary)
library(tidycensus)
library(ggrepel)
library(ggpmisc)
library(readstata13)  #imports .dta files from Stata 13 and up
library(tidyverse)
library(lubridate)
library(fastDummies)
library(weights)
library(lmtest)
library(sandwich)
library(multiwayvcov)
library(fixest)
library(estimatr)
library(modelsummary)
library(tidycensus)
library(ggrepel)
library(ggpmisc)
getwd()
MI_acs_zip.clean <- readRDS("Data/MI_acs_zip.clean.rds") %>%
arrange(zip5, year)
View(MI_acs_zip.clean)
dim(MI_acs_zip.clean)
head(MI_acs_zip.clean)
input_hcup_zip <- read.dta13("Data/hcup_total_&_viral.dta")
table(input_hcup_zip$year, input_hcup_zip$month)
joined_temp1 <- left_join(input_hcup_zip,
MI_acs_zip.clean,
by = c("zip5", "year")) %>%
mutate(month_year = make_date(year, month)) %>%
arrange(zip5, year, month)
input_si <- read.dta13("Data/si_1017_cleaned.dta")
si.clean <- input_si %>%
select(si_order_number, zip5, year, month) %>%
arrange(zip5, year, month)
si_zip_ym <- si.clean %>%
group_by(zip5, year, month) %>%
summarise(si_count = n_distinct(si_order_number)) %>%
mutate(month_year = make_date(year, month)) %>%
arrange(zip5, year, month)
table(si_zip_ym$year, si_zip_ym$month)
joined_temp2 <- joined_temp1 %>%
left_join(si_zip_ym)
joined_temp2 <- joined_temp1 %>%
full_join(si_zip_ym)
View(si_zip_ym)
joined_temp2 <- joined_temp1 %>%
full_join(si_zip_ym) %>%
filter(zip5 != 48225, zip5 != 48127)
View(joined_temp2)
joined_temp2 <- joined_temp1 %>%
full_join(si_zip_ym) %>%
filter(zip5 != 48225, zip5 != 48127) %>%
mutate(si_count = replace_na(si_count, 0))
joined_temp3 <- joined_temp2 %>%
mutate(quarter = 3 * as.numeric(cut(joined_temp2$month,
breaks = c(0,3,6,9,12),
labels = FALSE ) ) )
input_vacancy_qtr <- read.dta13("Data/usps_hud_2010-2019_zip_quarter.dta")
zip_panel <- joined_temp4 %>%
mutate(total_obs_1000 = (total_obs/ pop) *1000,
si_1000 = (si_count / pop) * 1000,
viral_infect_1000 = (viral_infect / pop) * 1000,
vac_res_p100 = (vac_res / total_res) * 100 ) %>%
mutate(ym = group_indices(joined_temp4, year, month),
zip5_fac = as.factor(zip5),
ym_fac = as.factor(ym))
joined_temp4 <- left_join(joined_temp3, input_vacancy_qtr,
by = c("zip5", "year", "quarter"))
zip_panel <- joined_temp4 %>%
mutate(total_obs_1000 = (total_obs/ pop) *1000,
si_1000 = (si_count / pop) * 1000,
viral_infect_1000 = (viral_infect / pop) * 1000,
vac_res_p100 = (vac_res / total_res) * 100 ) %>%
mutate(ym = group_indices(joined_temp4, year, month),
zip5_fac = as.factor(zip5),
ym_fac = as.factor(ym))
zip_panel <- dummy_cols(zip_panel, select_columns = c("ym", "zip5"))
joined_temp2 %>% filter(is.na(viral_infect)) %>% View()
joined_temp3 <- joined_temp2 %>%
mutate(quarter = 3 * as.numeric(cut(joined_temp2$month,
breaks = c(0,3,6,9,12),
labels = FALSE ) ) )
input_vacancy_qtr <- read.dta13("Data/usps_hud_2010-2019_zip_quarter.dta")
summary(input_vacancy_qtr)
table(input_vacancy_qtr$zip5, input_vacancy_qtr$year)
joined_temp4 <- left_join(joined_temp3, input_vacancy_qtr,
by = c("zip5", "year", "quarter"))
#inspect
dim(joined_temp4)
head(joined_temp4)
zip_panel <- joined_temp4 %>%
mutate(total_obs_1000 = (total_obs/ pop) *1000,
si_1000 = (si_count / pop) * 1000,
viral_infect_1000 = (viral_infect / pop) * 1000,
vac_res_p100 = (vac_res / total_res) * 100 ) %>%
mutate(ym = group_indices(joined_temp4, year, month),
zip5_fac = as.factor(zip5),
ym_fac = as.factor(ym))
zip_panel <- dummy_cols(zip_panel, select_columns = c("ym", "zip5"))
zip_cross <- joined_temp4 %>%
group_by(zip5) %>%
summarise(total_obs = sum(total_obs, na.rm = TRUE),
si_count  = sum(si_count, na.rm = TRUE),
viral_infect = sum(viral_infect, na.rm = TRUE),
vac_res = mean(vac_res, na.rm = TRUE),
total_res = mean(total_res, na.rm = TRUE),
medianinc = mean(medianinc, na.rm = TRUE),
pop = mean(pop, na.rm = TRUE)) %>%
mutate(total_obs_1000 = (total_obs / pop) *1000,
si_1000 = (si_count / pop) * 1000,
viral_infect_1000 = (viral_infect / pop) * 1000,
vac_res_p100 = (vac_res / total_res) * 100 )
save(zip_cross, file="Data/zip_cross.rdata")
rm(joined_temp1, joined_temp2, joined_temp3, joined_temp4)
cross_total_1 <- lm(total_obs_1000 ~ si_1000,
data = zip_cross,
weight = pop)
summary(cross_total_1)
coeftest(cross_total_1,
vcov = vcovHC(cross_total_1, type="HC1")) #robust SEs
cross_total_1alt <- lm_robust(total_obs_1000 ~ si_1000,
data = zip_cross,
weight = pop,
se_type = "stata")
summary(cross_total_1alt)
cross_total_2 <- lm_robust(total_obs_1000 ~ si_1000 + vac_res_p100,
data = zip_cross,
weight = pop,
se_type = "stata")
summary(cross_total_2)
ggplot(data = zip_cross,
aes(x = si_1000,
y = total_obs_1000)) +
geom_point(aes(size = pop), alpha = 0.3) +
scale_size(range = c(0.1, 6),
guide = "none") +
geom_smooth(aes(weight = pop),
method = 'lm_robust', #plots robust SEs for confidence band!
formula = y ~ x) +
xlab("Shutoffs per 1,000 residents") +
ylab("Hospitalizations per 1,000 residents")
